{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda Resumos de Estudo","text":"<p>Bem-vindo ao meu reposit\u00f3rio de anota\u00e7\u00f5es e estudos! Aqui voc\u00ea encontrar\u00e1 materiais sobre diversos t\u00f3picos, organizados para consulta r\u00e1pida.  </p> <p>\"Aprender nunca cansa a mente.\" \u2013 Leonardo da Vinci  </p>"},{"location":"#indice-de-estudos","title":"\ud83d\udcd6 \u00cdndice de Estudos","text":""},{"location":"#livros-em-andamento","title":"\ud83d\udd39 Livros (\ud83d\udea7 Em andamento)","text":"<ul> <li>The Pragmatic Programmer - Refer\u00eancia r\u00e1pida sobre alguns t\u00f3picos-chave do livro.</li> </ul>"},{"location":"#como-navegar","title":"\ud83d\ude80 Como Navegar","text":"<ul> <li>Use a barra lateral para acessar rapidamente o conte\u00fado.</li> <li>Utilize a barra de busca (\ud83d\udd0d) para encontrar t\u00f3picos espec\u00edficos.</li> <li>Ative o modo escuro (\ud83c\udf19) usando o bot\u00e3o no topo da p\u00e1gina.</li> </ul>"},{"location":"pragmatic_programmer/","title":"Anota\u00e7\u00f5es do Livro \"O Programador Pragm\u00e1tico\"","text":""},{"location":"pragmatic_programmer/#capitulo-1-uma-filosofia-pragmatica","title":"Cap\u00edtulo 1 \u2013 Uma Filosofia Pragm\u00e1tica","text":""},{"location":"pragmatic_programmer/#dica-1-assuma-as-responsabilidades","title":"Dica 1: Assuma as Responsabilidades","text":"<ul> <li>N\u00e3o culpe outras pessoas pelos problemas ou dificuldades que surgirem. Assuma controle e responsabilidade pelas situa\u00e7\u00f5es.</li> <li>Planeje sempre com anteced\u00eancia. Se algo puder dar errado, antecipe-se com um plano de conting\u00eancia.</li> <li>Ofere\u00e7a op\u00e7\u00f5es claras e solu\u00e7\u00f5es pr\u00e1ticas, evitando desculpas superficiais.</li> <li>Ao assumir responsabilidades, voc\u00ea ganha credibilidade e confian\u00e7a, facilitando a resolu\u00e7\u00e3o efetiva de problemas.</li> </ul>"},{"location":"pragmatic_programmer/#dica-4-nao-tolere-janelas-quebradas","title":"Dica 4: N\u00e3o Tolere Janelas Quebradas","text":"<ul> <li>Corrija bugs e fa\u00e7a pequenas refatora\u00e7\u00f5es sempre que encontrar problemas no c\u00f3digo.</li> <li>Nunca deixe uma parte do sistema quebrada ou mal estruturada ao passar por ela. Pequenas melhorias frequentes mant\u00eam o sistema limpo e est\u00e1vel.</li> <li>Uma \u00fanica \"janela quebrada\" (bug ignorado ou c\u00f3digo ruim) pode levar rapidamente \u00e0 degrada\u00e7\u00e3o geral do projeto.</li> </ul>"},{"location":"pragmatic_programmer/#dica-7-encare-a-qualidade-como-um-requisito-essencial","title":"Dica 7: Encare a Qualidade como um Requisito Essencial","text":"<ul> <li>Qualidade n\u00e3o \u00e9 um b\u00f4nus; \u00e9 parte integrante dos requisitos do projeto.</li> <li>Defina crit\u00e9rios claros e mensur\u00e1veis de qualidade desde o in\u00edcio, evitando retrabalho e custos adicionais no futuro.</li> </ul>"},{"location":"pragmatic_programmer/#dica-8-comunique-se-com-clareza","title":"Dica 8: Comunique-se com Clareza","text":"<ul> <li>Comunique-se levando em considera\u00e7\u00e3o seu p\u00fablico-alvo, ouvindo atentamente e compreendendo suas necessidades.</li> <li>Concentre-se em solu\u00e7\u00f5es pr\u00e1ticas e evite reclama\u00e7\u00f5es ou conflitos improdutivos.</li> <li>Comunica\u00e7\u00e3o aberta e transparente fortalece a equipe e melhora os resultados.</li> </ul>"},{"location":"pragmatic_programmer/#capitulo-2-uma-abordagem-pragmatica","title":"Cap\u00edtulo 2 \u2013 Uma Abordagem Pragm\u00e1tica","text":""},{"location":"pragmatic_programmer/#dica-11-nao-se-repita-nsr","title":"Dica 11: N\u00e3o Se Repita (NSR)","text":"<p>Evite duplica\u00e7\u00f5es no c\u00f3digo e nas informa\u00e7\u00f5es. Duplica\u00e7\u00f5es aumentam a complexidade, favorecem erros e dificultam a manuten\u00e7\u00e3o.</p>"},{"location":"pragmatic_programmer/#tipos-de-duplicacao","title":"Tipos de Duplica\u00e7\u00e3o","text":"<p>1. Duplica\u00e7\u00e3o Imposta</p> <ul> <li>Surge devido a limita\u00e7\u00f5es externas (frameworks ou bibliotecas).</li> <li>Solu\u00e7\u00e3o sugerida: Utilize ferramentas, geradores de c\u00f3digo ou filtros autom\u00e1ticos para lidar com essas duplica\u00e7\u00f5es.</li> </ul> <p>2. Duplica\u00e7\u00e3o Inadvertida</p> <ul> <li>Acontece quando voc\u00ea replica informa\u00e7\u00f5es ou funcionalidades sem perceber.</li> <li>Exemplo:</li> </ul> <pre><code>class Line {\n  public Point start;\n  public Point end;\n  public double length;\n}\n</code></pre> <p>Neste caso, o atributo <code>length</code> est\u00e1 duplicado, pois pode ser calculado diretamente pelos pontos <code>start</code> e <code>end</code>.</p> <ul> <li>Solu\u00e7\u00e3o sugerida: Revise frequentemente o c\u00f3digo e fa\u00e7a revis\u00f5es entre colegas para identificar e eliminar duplica\u00e7\u00f5es inadvertidas.</li> </ul> <p>3. Duplica\u00e7\u00e3o Impaciente</p> <ul> <li>Surge quando h\u00e1 press\u00e3o por prazos e o desenvolvedor cria duplica\u00e7\u00f5es para entregar r\u00e1pido.</li> <li>Alerta: Esses atalhos resultam em custos maiores futuramente. Avalie cuidadosamente antes de duplicar c\u00f3digo.</li> </ul> <p>4. Duplica\u00e7\u00e3o Entre Desenvolvedores</p> <ul> <li>Ocorre quando diferentes desenvolvedores implementam solu\u00e7\u00f5es semelhantes devido \u00e0 falta de comunica\u00e7\u00e3o.</li> <li>Solu\u00e7\u00e3o sugerida: Estimule colabora\u00e7\u00e3o constante e promova revis\u00f5es regulares de c\u00f3digo para compartilhar conhecimento.</li> </ul>"},{"location":"pragmatic_programmer/#dica-12-facilite-a-reutilizacao","title":"Dica 12: Facilite a Reutiliza\u00e7\u00e3o","text":"<ul> <li>Escreva c\u00f3digo modular, flex\u00edvel e claramente documentado.</li> <li>Utilize padr\u00f5es e conven\u00e7\u00f5es reconhecidas pela equipe, facilitando entendimento e reutiliza\u00e7\u00e3o.</li> <li>Compartilhe solu\u00e7\u00f5es eficazes para reduzir esfor\u00e7os repetitivos e aumentar a produtividade da equipe.</li> </ul>"},{"location":"pragmatic_programmer/#dica-13-ortogonalidade-elimine-efeitos-colaterais-de-elementos-nao-relacionados","title":"Dica 13: Ortogonalidade \u2013 Elimine Efeitos Colaterais de Elementos N\u00e3o Relacionados","text":"<p>Ortogonalidade significa independ\u00eancia ou separa\u00e7\u00e3o clara entre componentes. Em sistemas ortogonais, mudan\u00e7as em um m\u00f3dulo n\u00e3o afetam m\u00f3dulos n\u00e3o relacionados.</p>"},{"location":"pragmatic_programmer/#importancia-da-ortogonalidade","title":"Import\u00e2ncia da Ortogonalidade","text":"<ul> <li>Problemas ficam isolados em m\u00f3dulos espec\u00edficos, simplificando corre\u00e7\u00f5es.</li> <li>C\u00f3digo ortogonal facilita testes, permitindo avalia\u00e7\u00f5es isoladas.</li> <li>Mudan\u00e7as t\u00eam impacto limitado, reduzindo a fragilidade do sistema.</li> <li>Melhora a manutenibilidade e estabilidade do sistema ao longo prazo.</li> </ul>"},{"location":"pragmatic_programmer/#teste-para-ortogonalidade","title":"Teste para Ortogonalidade","text":"<p>Questione-se: \"Se eu alterar drasticamente os requisitos de uma fun\u00e7\u00e3o espec\u00edfica, quantos m\u00f3dulos ser\u00e3o afetados?\"</p> <p>Em um sistema ortogonal, apenas um m\u00f3dulo deveria ser afetado.</p>"},{"location":"pragmatic_programmer/#boas-praticas-para-ortogonalidade","title":"Boas Pr\u00e1ticas para Ortogonalidade","text":"<ul> <li>Evite usar dados globais, pois eles criam depend\u00eancias ocultas.</li> <li>Mantenha os m\u00f3dulos claramente desacoplados, cada um com responsabilidade \u00fanica.</li> <li>Evite redund\u00e2ncia ou fun\u00e7\u00f5es similares que fazem a mesma coisa.</li> <li>Promova reversibilidade, permitindo facilmente desfazer altera\u00e7\u00f5es caso necess\u00e1rio.</li> </ul>"}]}